{"version":3,"file":"static/js/3223.0f4c9fcc.chunk.js","mappings":"yPAiHA,UAtGoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAETC,GAAaC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,oBAA1CH,SAOFI,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAAaE,MAAM,oBAAoBC,SAAS,qBACvDC,SAAUJ,EAAAA,KACPK,IAAI,EAAG,0CACPF,SAAS,0BAQd,OALAG,EAAAA,EAAAA,YAAU,WACLX,GAAUJ,EAAS,yBACrB,CAACI,KAIF,iBAAKY,UAAU,WAAf,WACE,SAAC,IAAD,CAAQA,UAAU,qCAClB,SAAC,IAAD,CAASA,UAAU,iCACnB,SAAC,KAAD,CAAWC,OAAK,EAACD,UAAU,QAA3B,UACE,SAAC,KAAD,CAAKA,UAAU,kDAAf,UACE,UAAC,KAAD,CAAKE,GAAG,KAAKF,UAAU,iBAAvB,WACE,SAAC,IAAD,KACA,SAAC,KAAD,WACE,UAAC,KAAD,CAAUA,UAAU,UAApB,WACE,eAAIA,UAAU,OAAd,oBACA,mBAAOA,UAAU,eAAjB,sCAC0B,SAAC,KAAD,CAAMG,GAAG,uBAAT,yBAE1B,SAAC,KAAD,CACEC,cAhCM,CACpBT,MAAO,GACPE,SAAU,IA+BIL,iBAAkBA,EAClBa,SAAU,SAACC,GAET,IAAOX,EAAmBW,EAAnBX,MAAOE,EAAYS,EAAZT,SAEdX,GAASqB,EAAAA,EAAAA,IAAU,CAACZ,MAAAA,EAAOE,SAAAA,MAI7BW,OAAQ,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACN,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,QAAQ,QAAf,oBACA,SAAC,KAAD,CACEC,KAAK,QACLC,KAAK,OACLb,UAAS,sBACPS,EAAOd,OAASe,EAAQf,MAAQ,cAAgB,OAGpD,SAAC,KAAD,CAAciB,KAAK,QAAQE,UAAU,MAAMd,UAAU,yBAEvD,UAAC,KAAD,YACE,SAAC,KAAD,CAAOW,QAAQ,WAAf,uBACA,SAAC,KAAD,CACEC,KAAK,WACLC,KAAK,WACLb,UAAS,sBACPS,EAAOZ,UAAYa,EAAQb,SAAW,cAAgB,OAG1D,SAAC,KAAD,CACEe,KAAK,WACLE,UAAU,MACVd,UAAU,yBAGd,UAAC,KAAD,CAAWA,UAAU,oBAAoBe,QAAM,EAA/C,WACE,UAAC,KAAD,CAAOC,OAAK,EAAZ,WACE,SAAC,KAAD,CAAOH,KAAK,aADd,kBAIA,SAAC,KAAD,CAAMb,UAAU,+BAA+BG,GAAG,kBAAlD,UACE,iDAGJ,SAAC,KAAD,WACE,SAAC,KAAD,CAAQU,KAAK,SAASI,MAAM,UAAUjB,UAAU,OAAhD","sources":["views/auth/LoginFormik.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Button, Label, FormGroup, Container, Row, Col, Card, CardBody, Input } from 'reactstrap';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AuthLogo from \"../../layouts/logo/AuthLogo\";\r\nimport { ReactComponent as LeftBg } from '../../assets/images/bg/login-bgleft.svg';\r\nimport { ReactComponent as RightBg } from '../../assets/images/bg/login-bg-right.svg';\r\nimport { fetchUser } from '../../store/authSlice';\r\n\r\nconst LoginFormik = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  \r\n  const { userInfo } = useSelector((state) => state.userLoginReducer);\r\n\r\n  const initialValues = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().email('Email is invalid').required('Email is required'),\r\n    password: Yup.string()\r\n      .min(6, 'Password must be at least 6 characters')\r\n      .required('Password is required'),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(userInfo) navigate('/dashboards/minimal')\r\n  }, [userInfo])\r\n  \r\n\r\n  return (\r\n    <div className=\"loginBox\">\r\n      <LeftBg className=\"position-absolute left bottom-0\" />\r\n      <RightBg className=\"position-absolute end-0 top\" />\r\n      <Container fluid className=\"h-100\">\r\n        <Row className=\"justify-content-center align-items-center h-100\">\r\n          <Col lg=\"12\" className=\"loginContainer\">\r\n            <AuthLogo />\r\n            <Card>\r\n              <CardBody className=\"p-4 m-1\">\r\n                <h5 className=\"mb-0\">Login</h5>\r\n                <small className=\"pb-4 d-block\">\r\n                  Do not have an account? <Link to=\"/auth/registerformik\">Sign Up</Link>\r\n                </small>\r\n                <Formik\r\n                  initialValues={initialValues}\r\n                  validationSchema={validationSchema}\r\n                  onSubmit={(fields) => {\r\n                    // eslint-disable-next-line no-alert\r\n                    const {email, password} = fields;\r\n                    \r\n                    dispatch(fetchUser({email, password}));\r\n                    // alert(`SUCCESS!! :-)\\n\\n${JSON.stringify(fields, null, 4)}`);\r\n                    // navigate('/');\r\n                  }}\r\n                  render={({ errors, touched }) => (\r\n                    <Form>\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"email\">Email</Label>\r\n                        <Field\r\n                          name=\"email\"\r\n                          type=\"text\"\r\n                          className={`form-control${\r\n                            errors.email && touched.email ? ' is-invalid' : ''\r\n                          }`}\r\n                        />\r\n                        <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"password\">Password</Label>\r\n                        <Field\r\n                          name=\"password\"\r\n                          type=\"password\"\r\n                          className={`form-control${\r\n                            errors.password && touched.password ? ' is-invalid' : ''\r\n                          }`}\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"password\"\r\n                          component=\"div\"\r\n                          className=\"invalid-feedback\"\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup className=\"form-check d-flex\" inline>\r\n                        <Label check>\r\n                          <Input type=\"checkbox\" />\r\n                          Remember me\r\n                        </Label>\r\n                        <Link className=\"ms-auto text-decoration-none\" to=\"/auth/forgotPwd\">\r\n                          <small>Forgot Pwd?</small>\r\n                        </Link>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Button type=\"submit\" color=\"primary\" className=\"me-2\">\r\n                          Login\r\n                        </Button>\r\n                      </FormGroup>\r\n                    </Form>\r\n                  )}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginFormik;\r\n"],"names":["navigate","useNavigate","dispatch","useDispatch","userInfo","useSelector","state","userLoginReducer","validationSchema","Yup","shape","email","required","password","min","useEffect","className","fluid","lg","to","initialValues","onSubmit","fields","fetchUser","render","errors","touched","htmlFor","name","type","component","inline","check","color"],"sourceRoot":""}