{"version":3,"file":"static/js/847.4f30921f.chunk.js","mappings":"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","sources":["components/ComponentCard.js","components/dashboard/minimalDashboard/ROISplit.js","components/dashboard/minimalDashboard/ROIHistory.js","views/dashboards/UserROISplit.js"],"sourcesContent":["import { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ComponentCard = ({ children, title, subtitle }) => {\r\n  return (\r\n    <Card>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n      </CardTitle>\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React, { useState } from 'react';\nimport {\n  Form,\n  FormGroup,\n  Label,\n  Card,\n  CardBody,\n  Input,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\nimport { useDispatch } from 'react-redux';\nimport { splitRoi } from '../../../store/roiSlice';\nimport ComponentCard from '../../ComponentCard';\n\nconst BasicForm = () => {\n  const dispatch = useDispatch();\n  const [percentage, setPercentage] = useState('');\n  const [modal, setModal] = useState(false);\n  const [validationModal, setValidationModal] = useState(false);\n  const [successModal, setSuccessModal] = useState(false);\n\n  const toggleModal = () => setModal(!modal);\n  const toggleValidationModal = () => setValidationModal(!validationModal);\n  const toggleSuccessModal = () => setSuccessModal(!successModal);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const isValidPercentage = parseFloat(percentage) >= 0.4 && parseFloat(percentage) <= 1.4;\n    if (isValidPercentage) {\n      toggleModal();\n      dispatch(splitRoi(percentage));\n    } else {\n      toggleValidationModal();\n    }\n  };\n\n  return (\n    <Card>\n      <CardBody>\n        <>\n          <ComponentCard title={<span style={{ color: 'Black', fontWeight: 'bold' }}>Split Todays ROI</span>}>\n            <Form onSubmit={handleSubmit}>\n              <FormGroup>\n                <Label htmlFor=\"percentageInput\">Enter your percentage between 0.4 to 1.4</Label>\n                <Input\n                  type=\"number\"\n                  step=\"0.01\"\n                  name=\"percentage\"\n                  id=\"percentageInput\"\n                  placeholder=\"Enter percentage\"\n                  value={percentage}\n                  onChange={(e) => setPercentage(e.target.value)}\n                  required\n                  style={{ width: '200px' }} // Reduced length of the text box\n                />\n              </FormGroup>\n              <Button color=\"primary\" type=\"submit\" size=\"lg\">\n                Submit\n              </Button>\n            </Form>\n          </ComponentCard>\n\n          {/* Confirmation Modal */}\n          <Modal isOpen={modal} toggle={toggleModal}>\n            <ModalHeader toggle={toggleModal}>Confirmation</ModalHeader>\n            <ModalBody>\n              Your percentage is: {percentage}\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={() => {toggleModal(); toggleSuccessModal();}}>\n                OK\n              </Button>\n            </ModalFooter>\n          </Modal>\n\n          {/* Validation Error Modal */}\n          <Modal isOpen={validationModal} toggle={toggleValidationModal}>\n            <ModalHeader toggle={toggleValidationModal}>Validation Error</ModalHeader>\n            <ModalBody>\n              Please enter a valid percentage between 0.4 and 1.4.\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={toggleValidationModal}>\n                OK\n              </Button>\n            </ModalFooter>\n          </Modal>\n\n          {/* Success Modal */}\n          <Modal isOpen={successModal} toggle={toggleSuccessModal}>\n            <ModalHeader toggle={toggleSuccessModal}>ROI Split Successful</ModalHeader>\n            <ModalBody>\n              Your ROI has been successfully split.\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={toggleSuccessModal}>\n                OK\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default BasicForm;\n","/* eslint-disable no-underscore-dangle */\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Badge, Card, CardBody, CardTitle, Input, Table } from 'reactstrap';\nimport {splitRoiHistory  } from '../../../store/roiSlice';\n\n\n\n\nconst ROIHistory = () => {\n\n\n    const dispatch = useDispatch();\n\n    const { data } = useSelector((state) => state.splitRoiHistoryReducer);\n\n    useEffect(() => {\n        dispatch(splitRoiHistory());\n      }, [dispatch])\n      \n      const formatDate = (timestamp) => {\n        const options = { year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric' };\n        const formattedDate = new Date(timestamp).toLocaleDateString('en-US', options);\n        return formattedDate;\n      };\n      \n\n\n  return (\n    <Card>\n      <CardBody>\n        <div className=\"d-flex align-items-center justify-content-between\">\n          <div>\n            <CardTitle tag=\"h4\">ROI Percentage History</CardTitle>\n          </div>\n          <div className=\"mt-4 mt-md-0\">\n            <Input type=\"select\" className=\"custom-select\">\n              <option value=\"0\">Monthly</option>\n              <option value=\"1\">Daily</option>\n              <option value=\"2\">Weekly</option>\n              <option value=\"3\">Yearly</option>\n            </Input>\n          </div>\n        </div>\n      </CardBody>\n      <CardBody className=\"bg-light d-flex align-items-center justify-content-between\">\n      </CardBody>\n      <div className=\"table-responsive\">\n        <Table className=\"text-nowrap align-middle mb-0\" hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Date</th>\n              <th>Percentage</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data && data.dailyROIHistory.map((tdata,index) => (\n              <tr key={tdata.id} className=\"border-top\">\n                <td>\n                  <h6 className=\"mb-0\">{index+1}</h6>\n                </td>\n                <td>\n  <h6 className=\"mb-0\">{formatDate(tdata.createdAt)}</h6>\n</td>\n                <td>{tdata.percentage}</td>\n                <td>\n                    <Badge color=\"success\" pill>Approved</Badge>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    </Card>\n  );\n};\n\nexport default ROIHistory;\n","import { Row, Col } from 'reactstrap';\nimport ROISplit from '../../components/dashboard/minimalDashboard/ROISplit';\nimport ROIHistory from '../../components/dashboard/minimalDashboard/ROIHistory';\n\n\nconst UserROISplit = () => {\n  return (\n    <>\n      {/*********************Sales Overview ************************/}\n      <Row>\n        <Col lg=\"12\">\n          <ROISplit />\n          <ROIHistory/>\n        </Col>\n      </Row>\n      \n    </>\n  );\n};\n\nexport default UserROISplit;"],"names":["children","title","subtitle","tag","className","dispatch","useDispatch","useState","percentage","setPercentage","modal","setModal","validationModal","setValidationModal","successModal","setSuccessModal","toggleModal","toggleValidationModal","toggleSuccessModal","ComponentCard","style","color","fontWeight","onSubmit","e","preventDefault","parseFloat","splitRoi","htmlFor","type","step","name","id","placeholder","value","onChange","target","required","width","size","isOpen","toggle","onClick","data","useSelector","state","splitRoiHistoryReducer","useEffect","splitRoiHistory","hover","dailyROIHistory","map","tdata","index","timestamp","createdAt","Date","toLocaleDateString","year","month","day","hour","minute","second","pill","lg","ROISplit"],"sourceRoot":""}