{"version":3,"file":"static/js/1331.41bb851d.chunk.js","mappings":"qIAuBA,IApBsB,SAAC,GAAmC,IAAjCA,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxC,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAWC,IAAI,KAAKC,UAAU,+BAA9B,SACGH,KAEH,UAAC,KAAD,CAAUG,UAAU,MAApB,WACE,SAAC,KAAD,CAAcA,UAAU,kBAAxB,SAA2CF,GAAY,MACvD,yBAAMF,Y,oJCkGd,EA1FkB,WAEhB,IAAMK,GAAWC,EAAAA,EAAAA,MAMjB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8CJ,EAAAA,EAAAA,WAAS,GAAvD,eAAOK,EAAP,KAAwBC,EAAxB,KAEMC,EAAc,kBAAMH,GAAUD,IAC9BK,EAAwB,kBAAMF,GAAoBD,IAkBxD,OACE,SAAC,KAAD,WACA,SAAC,KAAD,WACE,iBAAKR,UAAU,oDAAf,WACA,SAACY,EAAA,EAAD,CAAef,OAAO,iBAAMgB,MAAO,CAAEC,MAAO,QAASC,WAAY,QAA3C,8BAAtB,UACE,UAAC,KAAD,CAAMC,SArBS,SAACC,GACpBA,EAAEC,iBAGF,IAAMC,EAAoBC,WAAWhB,IAAe,IAAOgB,WAAWhB,IAAe,IACjFe,GAEFT,IACNT,GAASoB,EAAAA,EAAAA,IAASF,KAIZR,KASE,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOW,QAAQ,kBAAf,uDACA,SAAC,KAAD,CACEC,KAAK,SACLC,KAAK,OACLC,KAAK,aACLC,GAAG,kBACHC,YAAY,mBACZC,MAAOxB,EACPyB,SAAU,SAACZ,GAAD,OAAOZ,EAAcY,EAAEa,OAAOF,QACxCG,UAAQ,EACRlB,MAAO,CAAEmB,MAAO,eAGpB,SAAC,KAAD,CAAQlB,MAAM,UAAUS,KAAK,SAASU,KAAK,KAA3C,0BAOJ,UAAC,KAAD,CAAOC,OAAQ5B,EAAO6B,OAAQzB,EAA9B,WACE,SAAC,KAAD,CAAayB,OAAQzB,EAArB,2BACA,UAAC,KAAD,kCACuBN,MAGvB,SAAC,KAAD,WACE,SAAC,KAAD,CAAQU,MAAM,UAAUsB,QAAS1B,EAAjC,sBAOJ,UAAC,KAAD,CAAOwB,OAAQ1B,EAAiB2B,OAAQxB,EAAxC,WACE,SAAC,KAAD,CAAawB,OAAQxB,EAArB,+BACA,SAAC,KAAD,oEAIA,SAAC,KAAD,WACE,SAAC,KAAD,CAAQG,MAAM,UAAUsB,QAASzB,EAAjC,6BChFV,EAdqB,WACnB,OACE,+BAEE,SAAC,KAAD,WACE,SAAC,KAAD,CAAK0B,GAAG,KAAR,UACE,SAACC,EAAD","sources":["components/ComponentCard.js","components/dashboard/minimalDashboard/ROISplit.js","views/dashboards/UserROISplit.js"],"sourcesContent":["import { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ComponentCard = ({ children, title, subtitle }) => {\r\n  return (\r\n    <Card>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n      </CardTitle>\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React, { useState } from 'react';\nimport {\n  Form,\n  FormGroup,\n  Label,\n  Card,\n  CardBody,\n  Input,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\nimport { useDispatch } from 'react-redux';\nimport { splitRoi } from '../../../store/roiSlice';\nimport ComponentCard from '../../ComponentCard';\n\n\nconst BasicForm = () => {\n\n  const dispatch = useDispatch();\n  \n\n\n\n\n  const [percentage, setPercentage] = useState('');\n  const [modal, setModal] = useState(false);\n  const [validationModal, setValidationModal] = useState(false);\n\n  const toggleModal = () => setModal(!modal);\n  const toggleValidationModal = () => setValidationModal(!validationModal);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Perform validation on the entered percentage value\n    const isValidPercentage = parseFloat(percentage) >= 0.4 && parseFloat(percentage) <= 1.4;\n    if (isValidPercentage) {\n      // Show confirmation modal\n      toggleModal();\ndispatch(splitRoi(isValidPercentage))\n\n    } else {\n      // Show validation error modal\n      toggleValidationModal();\n    }\n  };\n\n  return (\n    <Card>\n    <CardBody>\n      <div className=\"d-flex align-items-center justify-content-between\">\n      <ComponentCard title={<span style={{ color: 'Black', fontWeight: 'bold' }}>Split Todays ROI</span>}>\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Label htmlFor=\"percentageInput\">Enter your percentage between 0.4 to 1.4</Label>\n            <Input\n              type=\"number\"\n              step=\"0.01\"\n              name=\"percentage\"\n              id=\"percentageInput\"\n              placeholder=\"Enter percentage\"\n              value={percentage}\n              onChange={(e) => setPercentage(e.target.value)}\n              required\n              style={{ width: '200px' }} // Reduced length of the text box\n            />\n          </FormGroup>\n          <Button color=\"primary\" type=\"submit\" size=\"lg\">\n            Submit\n          </Button>\n        </Form>\n      </ComponentCard>\n\n      {/* Confirmation Modal */}\n      <Modal isOpen={modal} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>Confirmation</ModalHeader>\n        <ModalBody>\n          Your percentage is: {percentage}\n          {/* You can customize the confirmation message here */}\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={toggleModal}>\n            OK\n          </Button>\n        </ModalFooter>\n      </Modal>\n\n      {/* Validation Error Modal */}\n      <Modal isOpen={validationModal} toggle={toggleValidationModal}>\n        <ModalHeader toggle={toggleValidationModal}>Validation Error</ModalHeader>\n        <ModalBody>\n          Please enter a valid percentage between 0.4 and 1.4.\n          {/* You can customize the validation error message here */}\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={toggleValidationModal}>\n            OK\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n    </CardBody>\n    </Card>\n  );\n};\n\nexport default BasicForm;\n","import { Row, Col } from 'reactstrap';\nimport ROISplit from '../../components/dashboard/minimalDashboard/ROISplit';\n\n\nconst UserROISplit = () => {\n  return (\n    <>\n      {/*********************Sales Overview ************************/}\n      <Row>\n        <Col lg=\"12\">\n          <ROISplit />\n        </Col>\n      </Row>\n      \n    </>\n  );\n};\n\nexport default UserROISplit;"],"names":["children","title","subtitle","tag","className","dispatch","useDispatch","useState","percentage","setPercentage","modal","setModal","validationModal","setValidationModal","toggleModal","toggleValidationModal","ComponentCard","style","color","fontWeight","onSubmit","e","preventDefault","isValidPercentage","parseFloat","splitRoi","htmlFor","type","step","name","id","placeholder","value","onChange","target","required","width","size","isOpen","toggle","onClick","lg","ROISplit"],"sourceRoot":""}