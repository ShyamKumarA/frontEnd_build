{"version":3,"file":"static/js/6306.19663c53.chunk.js","mappings":"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","sources":["components/dashboard/minimalDashboard/PendingTopUp.js","views/dashboards/AcceptTopups.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Card, CardBody, CardTitle, Input, Table, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nimport { AcceptTopups, topupManage, Rejectpackage } from '../../../store/packageSlice';\n\nconst PendingTopUp = () => {\n  const dispatch = useDispatch();\n\n  const { data } = useSelector((state) => state.topupManageReducer);\n  const { data: acceptData } = useSelector((state) => state.acceptTopupReducer);\n  const { data: rejectData } = useSelector((state) => state.rejectPackageReducer);\n\n  const [showAcceptConfirmationModal, setShowAcceptConfirmationModal] = useState(false);\n  const [showRejectConfirmationModal, setShowRejectConfirmationModal] = useState(false);\n  const [selectedTopUpId, setSelectedTopUpId] = useState(null);\n\n  useEffect(() => {\n    dispatch(topupManage());\n  }, [dispatch, acceptData, rejectData]);\n\n  const acceptHandler = (id) => {\n    setSelectedTopUpId(id);\n    setShowAcceptConfirmationModal(true);\n  };\n\n  const rejectHandler = (id) => {\n    setSelectedTopUpId(id);\n    setShowRejectConfirmationModal(true);\n  };\n\n  const handleCloseAcceptConfirmationModal = () => {\n    setShowAcceptConfirmationModal(false);\n  };\n\n  const handleCloseRejectConfirmationModal = () => {\n    setShowRejectConfirmationModal(false);\n  };\n\n  const handleConfirmAcceptance = () => {\n    dispatch(AcceptTopups(selectedTopUpId));\n    setShowAcceptConfirmationModal(false);\n  };\n\n  const handleConfirmRejection = () => {\n    dispatch(Rejectpackage(selectedTopUpId));\n    setShowRejectConfirmationModal(false);\n  };\n\n  return (\n    <Card>\n      <CardBody>\n        <div className=\"d-flex align-items-center justify-content-between\">\n          <div>\n            <CardTitle tag=\"h4\">Pending TopUp</CardTitle>\n          </div>\n          <div className=\"mt-4 mt-md-0\">\n            <Input type=\"select\" className=\"custom-select\">\n              <option value=\"0\">Monthly</option>\n              <option value=\"1\">Daily</option>\n              <option value=\"2\">Weekly</option>\n              <option value=\"3\">Yearly</option>\n            </Input>\n          </div>\n        </div>\n      </CardBody>\n      <CardBody className=\"bg-light d-flex align-items-center justify-content-between\"></CardBody>\n      <div className=\"table-responsive\">\n        <Table className=\"text-nowrap align-middle mb-0\" hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Phone</th>\n              <th>Date</th>\n              <th>Tnx ID</th>\n              <th>Wallet Url</th>\n              <th>Amount</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data &&\n              data.userData.map((tdata, index) => (\n                <tr key={tdata.email} className=\"border-top\">\n                  <td>\n                    <h6 className=\"mb-0\">{index + 1}</h6>\n                  </td>\n                  <td>\n                    <h6 className=\"mb-0\">{tdata.username}</h6>\n                  </td>\n                  <td>{tdata.phone}</td>\n                  <td>{tdata.createdAt}</td>\n                  <td>{tdata.transactionCode}</td>\n                  <td>{tdata.addFundUrl}</td>\n                  <td>{tdata.topUpAmount}</td>\n                  <td>\n                    <Button className=\"btn m-2\" onClick={() => acceptHandler(tdata._id)} color=\"success\">\n                      Accept\n                    </Button>\n                    <Button className=\"btn\" onClick={() => rejectHandler(tdata._id)} color=\"danger\">\n                      Reject\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n      </div>\n\n      {/* Accept Confirmation Modal */}\n      <Modal isOpen={showAcceptConfirmationModal} toggle={handleCloseAcceptConfirmationModal}>\n        <ModalHeader toggle={handleCloseAcceptConfirmationModal}>Confirm Acceptance</ModalHeader>\n        <ModalBody>Are you sure you want to accept this top-up?</ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={handleCloseAcceptConfirmationModal}>\n            Cancel\n          </Button>\n          <Button color=\"success\" onClick={handleConfirmAcceptance}>\n            Confirm\n          </Button>\n        </ModalFooter>\n      </Modal>\n\n      {/* Reject Confirmation Modal */}\n      <Modal isOpen={showRejectConfirmationModal} toggle={handleCloseRejectConfirmationModal}>\n        <ModalHeader toggle={handleCloseRejectConfirmationModal}>Confirm Rejection</ModalHeader>\n        <ModalBody>Are you sure you want to reject this top-up?</ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={handleCloseRejectConfirmationModal}>\n            Cancel\n          </Button>\n          <Button color=\"danger\" onClick={handleConfirmRejection}>\n            Confirm\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </Card>\n  );\n};\n\nexport default PendingTopUp;\n","import { Row, Col } from 'reactstrap';\nimport PendingTopUp from '../../components/dashboard/minimalDashboard/PendingTopUp';\n\n\nconst AcceptTopups = () => {\n  return (\n    <>\n      {/*********************Sales Overview ************************/}\n      <Row>\n        <Col lg=\"12\">\n          <PendingTopUp />\n        </Col>\n      </Row>\n      \n    </>\n  );\n};\n\nexport default AcceptTopups;"],"names":["dispatch","useDispatch","data","useSelector","state","topupManageReducer","acceptData","acceptTopupReducer","rejectData","rejectPackageReducer","useState","showAcceptConfirmationModal","setShowAcceptConfirmationModal","showRejectConfirmationModal","setShowRejectConfirmationModal","selectedTopUpId","setSelectedTopUpId","useEffect","topupManage","handleCloseAcceptConfirmationModal","handleCloseRejectConfirmationModal","className","tag","type","value","hover","userData","map","tdata","index","username","phone","createdAt","transactionCode","addFundUrl","topUpAmount","onClick","id","_id","color","email","isOpen","toggle","AcceptTopups","Rejectpackage","lg"],"sourceRoot":""}