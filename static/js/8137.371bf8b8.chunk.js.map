{"version":3,"file":"static/js/8137.371bf8b8.chunk.js","mappings":"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","sources":["components/dashboard/minimalDashboard/PendingUsers.js","views/dashboards/AcceptUsers.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Card, CardBody, CardTitle, Input, Table, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nimport ModalImage from 'react-modal-image';\nimport { AcceptUserManage,RejectUserManage, userManage } from '../../../store/userSlice';\n\nconst PendingUsers = () => {\n  const dispatch = useDispatch();\n  const { data } = useSelector((state) => state.userManageReducer);\n  const { data: acceptData } = useSelector((state) => state.AcceptUserManageReducer);\n  const { data: rejectData } = useSelector((state) => state.RejectUserManageReducer);\n\n  console.log(rejectData);\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\n  const [showRejectConfirmationModal, setShowRejectConfirmationModal] = useState(false);\n  const [showConfirmationPopup, setShowConfirmationPopup] = useState(false);\n  const [selectedUserId, setSelectedUserId] = useState(null);\n\n  useEffect(() => {\n    dispatch(userManage());\n  }, [dispatch, acceptData]);\n\n  const acceptHandler = (id) => {\n    setSelectedUserId(id);\n    setShowConfirmationModal(true);\n  };\n\n  const rejectHandler = (id) => {\n    setSelectedUserId(id);\n    setShowRejectConfirmationModal(true);\n  };\n\n  const handleCloseConfirmationModal = () => {\n    setShowConfirmationModal(false);\n  };\n\n  const handleCloseRejectConfirmationModal = () => {\n    setShowRejectConfirmationModal(false);\n  };\n\n  const handleConfirmAcceptance = () => {\n    dispatch(AcceptUserManage(selectedUserId));\n    setShowConfirmationPopup(true);\n    setShowConfirmationModal(false);\n  };\n\n  const handleConfirmRejection = () => {\n    dispatch(RejectUserManage(selectedUserId));\n    setShowConfirmationPopup(true);\n    setShowRejectConfirmationModal(false);\n  };\n\n  const handlePopupClose = () => {\n    setShowConfirmationPopup(false);\n  };\n\n  return (\n    <Card>\n      <CardBody>\n        <div className=\"d-flex align-items-center justify-content-between\">\n          <div>\n            <CardTitle tag=\"h4\">Pending Users</CardTitle>\n          </div>\n          <div className=\"mt-4 mt-md-0\">\n            <Input type=\"select\" className=\"custom-select\">\n              <option value=\"0\">Monthly</option>\n              <option value=\"1\">Daily</option>\n              <option value=\"2\">Weekly</option>\n              <option value=\"3\">Yearly</option>\n            </Input>\n          </div>\n        </div>\n      </CardBody>\n      <CardBody className=\"bg-light d-flex align-items-center justify-content-between\">\n       \n      </CardBody>\n      <div className=\"table-responsive\">\n        <Table className=\"text-nowrap align-middle mb-0\" hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Phone</th>\n              <th>Document</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data && data.userData.map((tdata, index) => (\n              <tr key={tdata.email} className=\"border-top\">\n                <td>\n                  <h6 className=\"mb-0\">{index+1}</h6>\n                </td>\n                <td>\n                  <h6 className=\"mb-0\">{tdata.username}</h6>\n                </td>\n                <td>\n                  <h6 className=\"mb-0\">{tdata.phone}</h6>\n                </td>\n                <td\n                      className=\"mb-0\"\n                    >\n                      \n                      { tdata && (\n                        <div style={{ width: \"80px\" }}>\n                          <ModalImage\n                          \n                          small={`https://octtaview.com/uploads/${tdata.aadhaar}`}\n                          large={`https://octtaview.com/uploads/${tdata.aadhaar}`}\n                            alt=\"screenshot\"\n                          />\n                        </div>\n                      ) }\n                    </td>\n                    <td>\n              <Button className=\"btn m-2\" color=\"success\" onClick={() => acceptHandler(tdata._id)}>Accept</Button>\n              <Button className=\"btn\" color=\"danger\" onClick={() => rejectHandler(tdata._id)}>Reject</Button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n        </Table>\n      </div>\n       {/* Confirmation Modal */}\n       <Modal isOpen={showConfirmationModal} toggle={handleCloseConfirmationModal}>\n        <ModalHeader toggle={handleCloseConfirmationModal}>Confirm Acceptance</ModalHeader>\n        <ModalBody>\n          Are you sure you want to accept this user?\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={handleCloseConfirmationModal}>Cancel</Button>\n          <Button color=\"success\" onClick={handleConfirmAcceptance}>Confirm</Button>\n        </ModalFooter>\n      </Modal>\n\n       {/* Reject Confirmation Modal */}\n       <Modal isOpen={showRejectConfirmationModal} toggle={handleCloseRejectConfirmationModal}>\n        <ModalHeader toggle={handleCloseRejectConfirmationModal}>Confirm Rejection</ModalHeader>\n        <ModalBody>\n          Are you sure you want to reject this user?\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={handleCloseRejectConfirmationModal}>Cancel</Button>\n          <Button color=\"danger\" onClick={handleConfirmRejection}>Confirm</Button>\n        </ModalFooter>\n      </Modal>\n\n      {/* Confirmation Popup */}\n      <Modal isOpen={showConfirmationPopup} toggle={handlePopupClose}>\n        <ModalBody>\n          User accepted successfully!\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handlePopupClose}>Close</Button>\n        </ModalFooter>\n      </Modal>\n    </Card>\n  );\n};\n\nexport default PendingUsers;\n","import { Row, Col } from 'reactstrap';\nimport PendingUsers from '../../components/dashboard/minimalDashboard/PendingUsers';\n\n\nconst AcceptUsers = () => {\n  return (\n    <>\n      {/*********************Sales Overview ************************/}\n      <Row>\n        <Col lg=\"12\">\n          <PendingUsers />\n        </Col>\n      </Row>\n      \n    </>\n  );\n};\n\nexport default AcceptUsers;\n"],"names":["dispatch","useDispatch","data","useSelector","state","userManageReducer","acceptData","AcceptUserManageReducer","rejectData","RejectUserManageReducer","console","log","useState","showConfirmationModal","setShowConfirmationModal","showRejectConfirmationModal","setShowRejectConfirmationModal","showConfirmationPopup","setShowConfirmationPopup","selectedUserId","setSelectedUserId","useEffect","userManage","handleCloseConfirmationModal","handleCloseRejectConfirmationModal","handlePopupClose","className","tag","type","value","hover","userData","map","tdata","index","username","phone","style","width","small","aadhaar","large","alt","color","onClick","id","_id","email","isOpen","toggle","AcceptUserManage","RejectUserManage","lg"],"sourceRoot":""}