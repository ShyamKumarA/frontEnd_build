{"version":3,"file":"static/js/9364.e84ba1ae.chunk.js","mappings":"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","sources":["components/dashboard/minimalDashboard/PendingWalletWithdraw.js","views/dashboards/WalletWithdrawPending.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Card, CardBody, CardTitle, Input, Table, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nimport { AcceptWalletWithdraw, walletWithdrawPendingManage, RejectWalletWithdraw } from '../../../store/withdrawalSlice';\n\nconst PendingWalletWithdraw = () => {\n  const dispatch = useDispatch();\n  const { data } = useSelector((state) => state.walletWithdrawPendingManageReducer);\n  const { data: acceptData } = useSelector((state) => state.AcceptWalletWithdrawReducer);\n  const { data: rejectData } = useSelector((state) => state.RejectWalletWithdrawReducer);\n\n  const [showAcceptConfirmationModal, setShowAcceptConfirmationModal] = useState(false);\n  const [showRejectConfirmationModal, setShowRejectConfirmationModal] = useState(false);\n  const [selectedPackageId, setSelectedPackageId] = useState(null);\n\n  useEffect(() => {\n    dispatch(walletWithdrawPendingManage());\n  }, [dispatch, acceptData, rejectData]);\n\n  const acceptHandler = (id) => {\n    setSelectedPackageId(id);\n    setShowAcceptConfirmationModal(true);\n  };\n\n  const rejectHandler = (id) => {\n    setSelectedPackageId(id);\n    setShowRejectConfirmationModal(true);\n  };\n\n  const handleCloseAcceptConfirmationModal = () => {\n    setShowAcceptConfirmationModal(false);\n  };\n\n  const handleCloseRejectConfirmationModal = () => {\n    setShowRejectConfirmationModal(false);\n  };\n\n  const handleConfirmAcceptance = () => {\n    dispatch(AcceptWalletWithdraw(selectedPackageId));\n    setShowAcceptConfirmationModal(false);\n  };\n\n  const handleConfirmRejection = () => {\n    dispatch(RejectWalletWithdraw(selectedPackageId));\n    setShowRejectConfirmationModal(false);\n  };\n  const formatDate = (timestamp) => {\n    const options = { year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric' };\n    const formattedDate = new Date(timestamp).toLocaleDateString('en-US', options);\n    return formattedDate;\n  };\n\n  return (\n    <Card>\n      <CardBody>\n        <div className=\"d-flex align-items-center justify-content-between\">\n          <div>\n            <CardTitle tag=\"h4\">Pending Wallet Withdrawal</CardTitle>\n          </div>\n          <div className=\"mt-4 mt-md-0\">\n            <Input type=\"select\" className=\"custom-select\">\n              <option value=\"0\">Monthly</option>\n              <option value=\"1\">Daily</option>\n              <option value=\"2\">Weekly</option>\n              <option value=\"3\">Yearly</option>\n            </Input>\n          </div>\n        </div>\n      </CardBody>\n      <CardBody className=\"bg-light d-flex align-items-center justify-content-between\"></CardBody>\n      <div className=\"table-responsive\">\n        <Table className=\"text-nowrap align-middle mb-0\" hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Date</th>\n              <th>Phone</th>\n              <th>Amount</th>\n              <th>Wallet Url</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data && data.userData.map((tdata, index) => (\n              <tr key={tdata.email} className=\"border-top\">\n                <td>\n                  <h6 className=\"mb-0\">{index + 1}</h6>\n                </td>\n                <td>\n                  <h6 className=\"mb-0\">{tdata.username}</h6>\n                </td>\n                <td>\n                  <h6 className=\"mb-0\">{formatDate(tdata.createdAt)}</h6>\n                </td>\n                <td>{tdata.phone}</td>\n                <td>{tdata.walletWithdrawAmount}</td>\n                <td>{tdata.walletWithdrawUrl}</td>\n                <td>\n                  <Button className=\"btn m-2\" onClick={() => acceptHandler(tdata._id)} color=\"success\">\n                    Accept\n                  </Button>\n                  <Button className=\"btn\" onClick={() => rejectHandler(tdata._id)} color=\"danger\">\n                    Reject\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n\n      {/* Accept Confirmation Modal */}\n      <Modal isOpen={showAcceptConfirmationModal} toggle={handleCloseAcceptConfirmationModal}>\n        <ModalHeader toggle={handleCloseAcceptConfirmationModal}>Confirm Acceptance</ModalHeader>\n        <ModalBody>Are you sure you want to accept this withdrawal?</ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={handleCloseAcceptConfirmationModal}>Cancel</Button>\n          <Button color=\"success\" onClick={handleConfirmAcceptance}>Confirm</Button>\n        </ModalFooter>\n      </Modal>\n\n      {/* Reject Confirmation Modal */}\n      <Modal isOpen={showRejectConfirmationModal} toggle={handleCloseRejectConfirmationModal}>\n        <ModalHeader toggle={handleCloseRejectConfirmationModal}>Confirm Rejection</ModalHeader>\n        <ModalBody>Are you sure you want to reject this withdrawal?</ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={handleCloseRejectConfirmationModal}>Cancel</Button>\n          <Button color=\"danger\" onClick={handleConfirmRejection}>Confirm</Button>\n        </ModalFooter>\n      </Modal>\n    </Card>\n  );\n};\n\nexport default PendingWalletWithdraw;\n","import { Row, Col } from 'reactstrap';\nimport PendingWalletWithdraw from '../../components/dashboard/minimalDashboard/PendingWalletWithdraw';\n\n\nconst WalletWithdrawPending = () => {\n  return (\n    <>\n      {/*********************Sales Overview ************************/}\n      <Row>\n        <Col lg=\"12\">\n          <PendingWalletWithdraw />\n        </Col>\n      </Row>\n      \n    </>\n  );\n};\n\nexport default WalletWithdrawPending;"],"names":["dispatch","useDispatch","data","useSelector","state","walletWithdrawPendingManageReducer","acceptData","AcceptWalletWithdrawReducer","rejectData","RejectWalletWithdrawReducer","useState","showAcceptConfirmationModal","setShowAcceptConfirmationModal","showRejectConfirmationModal","setShowRejectConfirmationModal","selectedPackageId","setSelectedPackageId","useEffect","walletWithdrawPendingManage","handleCloseAcceptConfirmationModal","handleCloseRejectConfirmationModal","className","tag","type","value","hover","userData","map","tdata","index","username","timestamp","createdAt","Date","toLocaleDateString","year","month","day","hour","minute","second","phone","walletWithdrawAmount","walletWithdrawUrl","onClick","id","_id","color","email","isOpen","toggle","AcceptWalletWithdraw","RejectWalletWithdraw","lg"],"sourceRoot":""}