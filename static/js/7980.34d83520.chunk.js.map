{"version":3,"file":"static/js/7980.34d83520.chunk.js","mappings":"8NAiIA,EA3HwB,WACtB,IAAMA,GAAWC,EAAAA,EAAAA,MACTC,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,wBAAtCH,KACMI,GAAeH,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMG,wBAAlDL,KACMM,GAAeL,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMK,wBAAlDP,KAGR,GAA0DQ,EAAAA,EAAAA,WAAS,GAAnE,eAAOC,EAAP,KAA8BC,EAA9B,KACA,GAA0DF,EAAAA,EAAAA,WAAS,GAAnE,eAAOG,EAAP,KAA8BC,EAA9B,KACA,GAAkDJ,EAAAA,EAAAA,UAAS,MAA3D,eAAOK,EAAP,KAA0BC,EAA1B,MAEAC,EAAAA,EAAAA,YAAU,WACRjB,GAASkB,EAAAA,EAAAA,SACR,CAAClB,EAAUM,EAAWE,IAEzB,IASMW,EAA+B,WACnCP,GAAyB,IASrBQ,EAAmB,WACvBN,GAAyB,IAG3B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,iBAAKO,UAAU,oDAAf,WACE,0BACE,SAAC,KAAD,CAAWC,IAAI,KAAf,iCAEF,gBAAKD,UAAU,eAAf,UACE,UAAC,KAAD,CAAOE,KAAK,SAASF,UAAU,gBAA/B,WACE,mBAAQG,MAAM,IAAd,sBACA,mBAAQA,MAAM,IAAd,oBACA,mBAAQA,MAAM,IAAd,qBACA,mBAAQA,MAAM,IAAd,+BAKR,SAAC,KAAD,CAAUH,UAAU,gEAGpB,gBAAKA,UAAU,mBAAf,UACE,UAAC,KAAD,CAAOA,UAAU,gCAAgCI,OAAK,EAAtD,WACE,4BACE,2BACE,+BACA,kCACA,mCACA,kCACA,oCACA,oCACA,yCAGJ,2BACGvB,GAAQA,EAAKwB,SAASC,KAAI,SAACC,EAAOC,GAAR,OACzB,gBAAsBR,UAAU,aAAhC,WACE,yBACE,eAAIA,UAAU,OAAd,SAAsBQ,EAAQ,OAEhC,yBACE,eAAIR,UAAU,OAAd,SAAsBO,EAAME,cAE9B,wBAAKF,EAAMG,SACX,wBAAKH,EAAMI,aACX,wBAAKJ,EAAMK,mBACX,wBAAKL,EAAMM,eACX,2BACE,SAAC,KAAD,CAAQb,UAAU,UAAUc,QAAS,kBAtE9BC,EAsEkDR,EAAMS,IArE7ErB,EAAqBoB,QACrBxB,GAAyB,GAFL,IAACwB,GAsE8DE,MAAM,UAA3E,qBAGA,SAAC,KAAD,CAAQjB,UAAU,MAAMiB,MAAM,SAASH,QAAS,kBApE3CC,EAoE+DR,EAAMS,SAnExFrC,GAASuC,EAAAA,EAAAA,IAAcH,IADL,IAACA,GAoEL,yBAfKR,EAAMY,kBA0BvB,UAAC,KAAD,CAAOC,OAAQ9B,EAAuB+B,OAAQvB,EAA9C,WACE,SAAC,KAAD,CAAauB,OAAQvB,EAArB,iCACA,SAAC,KAAD,6DAGA,UAAC,KAAD,YACE,SAAC,KAAD,CAAQmB,MAAM,YAAYH,QAAShB,EAAnC,qBACA,SAAC,KAAD,CAAQmB,MAAM,UAAUH,QA9EA,WAC9BnC,GAAS2C,EAAAA,EAAAA,IAAc5B,IACvBD,GAAyB,GACzBF,GAAyB,IA2EnB,4BAKJ,UAAC,KAAD,CAAO6B,OAAQ5B,EAAuB6B,OAAQtB,EAA9C,WACE,SAAC,KAAD,8CAGA,SAAC,KAAD,WACE,SAAC,KAAD,CAAQkB,MAAM,UAAUH,QAASf,EAAjC,4BCxGV,EAduB,WACrB,OACE,+BAEE,SAAC,KAAD,WACE,SAAC,KAAD,CAAKwB,GAAG,KAAR,UACE,SAAC,EAAD","sources":["components/dashboard/minimalDashboard/PendingPackages.js","views/dashboards/AcceptPackages.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Card, CardBody, CardTitle, Input, Table, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\nimport { Acceptpackage, packageManage,Rejectpackage } from '../../../store/packageSlice';\r\n\r\nconst PendingPackages = () => {\r\n  const dispatch = useDispatch();\r\n  const { data } = useSelector((state) => state.packageManageReducer);\r\n  const { data: acceptData } = useSelector((state) => state.acceptPackageReducer);\r\n  const { data: rejectData } = useSelector((state) => state.rejectPackageReducer);\r\n\r\n\r\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\r\n  const [showConfirmationPopup, setShowConfirmationPopup] = useState(false);\r\n  const [selectedPackageId, setSelectedPackageId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(packageManage());\r\n  }, [dispatch, acceptData,rejectData]);\r\n\r\n  const acceptHandler = (id) => {\r\n    setSelectedPackageId(id);\r\n    setShowConfirmationModal(true);\r\n  };\r\n\r\n  const rejectHandler=(id)=>{\r\n    dispatch(Rejectpackage(id))\r\n  }\r\n\r\n  const handleCloseConfirmationModal = () => {\r\n    setShowConfirmationModal(false);\r\n  };\r\n\r\n  const handleConfirmAcceptance = () => {\r\n    dispatch(Acceptpackage(selectedPackageId));\r\n    setShowConfirmationPopup(true);\r\n    setShowConfirmationModal(false);\r\n  };\r\n\r\n  const handlePopupClose = () => {\r\n    setShowConfirmationPopup(false);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <div className=\"d-flex align-items-center justify-content-between\">\r\n          <div>\r\n            <CardTitle tag=\"h4\">Pending Packages</CardTitle>\r\n          </div>\r\n          <div className=\"mt-4 mt-md-0\">\r\n            <Input type=\"select\" className=\"custom-select\">\r\n              <option value=\"0\">Monthly</option>\r\n              <option value=\"1\">Daily</option>\r\n              <option value=\"2\">Weekly</option>\r\n              <option value=\"3\">Yearly</option>\r\n            </Input>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n      <CardBody className=\"bg-light d-flex align-items-center justify-content-between\">\r\n        \r\n      </CardBody>\r\n      <div className=\"table-responsive\">\r\n        <Table className=\"text-nowrap align-middle mb-0\" hover>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Name</th>\r\n              <th>Phone</th>\r\n              <th>Date</th>\r\n              <th>Tnx ID</th>\r\n              <th>Amount</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data && data.userData.map((tdata, index) => (\r\n              <tr key={tdata.email} className=\"border-top\">\r\n                <td>\r\n                  <h6 className=\"mb-0\">{index + 1}</h6>\r\n                </td>\r\n                <td>\r\n                  <h6 className=\"mb-0\">{tdata.username}</h6>\r\n                </td>\r\n                <td>{tdata.phone}</td>\r\n                <td>{tdata.createdAt}</td>\r\n                <td>{tdata.transactionCode}</td>\r\n                <td>{tdata.topUpAmount}</td>\r\n                <td>\r\n                  <Button className=\"btn m-2\" onClick={() => acceptHandler(tdata._id)} color=\"success\">\r\n                    Accept\r\n                  </Button>\r\n                  <Button className=\"btn\" color=\"danger\" onClick={() => rejectHandler(tdata._id)}>\r\n                    Reject\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n\r\n      {/* Confirmation Modal */}\r\n      <Modal isOpen={showConfirmationModal} toggle={handleCloseConfirmationModal}>\r\n        <ModalHeader toggle={handleCloseConfirmationModal}>Confirm Acceptance</ModalHeader>\r\n        <ModalBody>\r\n          Are you sure you want to accept this package?\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={handleCloseConfirmationModal}>Cancel</Button>\r\n          <Button color=\"success\" onClick={handleConfirmAcceptance}>Confirm</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      {/* Confirmation Popup */}\r\n      <Modal isOpen={showConfirmationPopup} toggle={handlePopupClose}>\r\n        <ModalBody>\r\n          Package accepted successfully!\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"success\" onClick={handlePopupClose}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PendingPackages;\r\n","import { Row, Col } from 'reactstrap';\r\nimport PendingPackages from '../../components/dashboard/minimalDashboard/PendingPackages';\r\n\r\n\r\nconst AcceptPackages = () => {\r\n  return (\r\n    <>\r\n      {/*********************Sales Overview ************************/}\r\n      <Row>\r\n        <Col lg=\"12\">\r\n          <PendingPackages />\r\n        </Col>\r\n      </Row>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default AcceptPackages;\r\n"],"names":["dispatch","useDispatch","data","useSelector","state","packageManageReducer","acceptData","acceptPackageReducer","rejectData","rejectPackageReducer","useState","showConfirmationModal","setShowConfirmationModal","showConfirmationPopup","setShowConfirmationPopup","selectedPackageId","setSelectedPackageId","useEffect","packageManage","handleCloseConfirmationModal","handlePopupClose","className","tag","type","value","hover","userData","map","tdata","index","username","phone","createdAt","transactionCode","topUpAmount","onClick","id","_id","color","Rejectpackage","email","isOpen","toggle","Acceptpackage","lg"],"sourceRoot":""}